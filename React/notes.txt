595. The Basics of JSX

JSX is a syntax extension to JavaScript.
It is similar to a template language, but it has full power of JavaScript. 
JSX gets compiled to React.createElement() calls which return plain JavaScript objects called “React elements”. Babel compiles JSX down to React.createElement() calls.

It allows us to write markup that looks like HTML directly inside of our HTML.
It's not legal JS on it's own so it must be transpiled into JS.

Babel behind the scenes will take the JSX and convert it into React.createElement() calls.




596. Basic React App Structure

App is the root component of our application. Top level component.
App component is the parent of all other components.


597. Our First React Component

function Greeter() {
  return <h1>HELLO! </h1>;
}

export default function App() {
  return (
    <div className="App">
      <h1>Hello CodeSandbox!!</h1>
      <h2>Start editing to see some magic happen!</h2>
      <input type="text" />
      <Greeter/> 
      {/* Call the function */}
    </div>
  );
}


598. Importing and Exporting Components
One component per file.
We can import and export components from one file to another.

Use ES6 modules to import and export components.
import Greeter from "./Greeter.js";

But we first need to export something that can be imported

export 
default

export default function Greeter() {
  return <h1>HELLO! </h1>;
}

Can also do

 function Greeter() {
  return <h1>HELLO! </h1>;
}
export default Greeter;


Can also export multiple things from a file
export {dog, cat};
But must import them like this
import {dog, cat} from "./animals.js";


function add(x, y) {
  return x + y;
}
function multiple(x, y) {
  return x * y;
}
export { add, multiple };


599. The Rules of JSX

You must explicityly close all tags.  like <br> must be <br />.
You can only return a single element from a component.  You can't return two sibling elements.  You can wrap them in a div or a fragment.

export default function LoginForm() {
  return (
    <form>
      <label> ID </label>
      <input type="text " />
      <label> password </label>
      <input type="password " />
      <button> Submit </button>
    </form>
  );
}
