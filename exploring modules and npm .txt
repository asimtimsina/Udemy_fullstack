330. Working With module.exports

const math = require('./math');
need ./ to tell node that it is a file and not a package

module.exports -> exoports the function or variable to the outside world
exports -> is a shortcut to module.exports

331. Requiring A Directory

if we require a directory, node will look for index.js file in that directory
all the files in that directory will be available in the index.js file
Just need to call the directory name and not the file name

const allCats = require('./shelter')
console.log(allCats)


332. Introducing NPM -> Node Package Manager

NPM is a package manager for node.js
It is a command line tool that comes with node.js
It is used to install, remove, update and publish packages
It is also an online repository for open source node.js projects

Usage:

npm install        install all the dependencies in your project
npm install <foo>  add the <foo> dependency to your project
npm test           run this project's tests
npm run <foo>      run the script named <foo>
npm <command> -h   quick help on <command>
npm -l             display usage info for all commands
npm help <term>    search for help on <term> (in a browser)
npm help npm       more involved overview (in a browser)

All commands:

    access, adduser, audit, bin, bugs, cache, ci, completion,
    config, dedupe, deprecate, diff, dist-tag, docs, doctor,
    edit, exec, explain, explore, find-dupes, fund, get, help,
    hook, init, install, install-ci-test, install-test, link,
    ll, login, logout, ls, org, outdated, owner, pack, ping,
    pkg, prefix, profile, prune, publish, rebuild, repo,
    restart, root, run-script, search, set, set-script,
    shrinkwrap, star, stars, start, stop, team, test, token,
    uninstall, unpublish, unstar, update, version, view, whoami


333. Installing Packages - Jokes & Rainbow

npm install <package-name> --save