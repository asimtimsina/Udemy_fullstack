1. Getting Started with jQuery

$(selector).action()

$(document).ready(function(){} 

Put every jQuery command in document ready function so that it will be executed only after the DOM is fully loaded.


   $("button").click(function () {
        $("h1").hide();
    })

2. jQuery Events

$(function(){
    $("p").click(function(){
        console.log("A paragraph was clicked.");
    })
})

dblclick
mouseenter
mouseleave
mousedown
mouseup
hover -> takes two functions as arguments, first is for mouseenter and second is for mouseleave

form events
focus
blur
change
select

remove a event handler
$("p").off("click");

running event only once
$("div").one("click", function () { });



3. jQuery Effects

$("img").hide();
$("img").show();

can also pass in speed as argument -> slow, fast, normal, 1000 in ms
$("img").hide("slow");
$("img").hide(1000);

$("img").slideUp();
$("img").slideDown();
$("img").fadeOut();
$("img").fadeIn();

$("img").toggle();

can chain effects 
$("h1").fadeIn(2000).addClass("blue");


if you want to defer an action until after an animation has run to completion you need to use an animation callback function

$("button").on("click", function () {
    $("button").slideUp(1000, function () {
        $(this).remove();
    });
});

Also stop an animation before it is complete

$("h1").on("click", function () {
    $("button").stop();
});

create delay between animations
$("div").fadeOut(2000).delay(2000).fadeIn(2000);


4. jQuery Animations

.animate({css properties}, duration, callback)

.animate(properties [, duration] [, easing] [, complete])
.animate(properties [, options])


5. Manupulating the DOM
//get and set with http, text, val, and attr 

.text()  //get the text of all elements in the selection
.html() //get the html of the first element in the selection
.val() //get or set the value of the input field
.attr([options]) //get the value of the first element in the selection


$("#btn").click(function () {
    console.log($("#newpara").text())
})

$("#btn1").click(function () {
    console.log($("#newpara").html())
})

$("#btn2").click(function () { //set content
    $("#newpara").text("WOW new Text")
})

$("#btn").click(function () {
    console.log($("#link").attr('href'))
})

$("#btn").click(function () {
    console.log($("#testinput").val())
})

$("#btn1").click(function () {
    $("#testinput").val('Asim Timsina')
})


6. add and remove DOM elements

.append() //add content to the end of the selection ->child
.prepend() //add content to the beginning of the selection ->child

.after() //add content after the selection  ->sibling
.before() //add content before the selection ->sibling

.remove() //remove the selection
.empty() //remove all child elements of the selection -> can add a parameter to remove only the child elements with that selector



can add multiple content at once by passing in multiple arguments


7. Changing CSS and classes

.css() //get or set css properties
.addClass() //add a class to the selection
.removeClass() //remove a class from the selection
.toggleClass() //toggle between adding and removing a class from the selection
.hasClass() //check if an element has a specific class

$("#btn").click(function () {
    $("#newpara").css("color", "red")
})

.css() can also add multiple css properties at once by passing in an object
$("#target").css({
    fontSize: "50px",
    color: "pink"
})



8. DOM Traversal

.parent() //get the parent of each element in the selection
.parents() //get all ancestors of each element in the selection
.children() //get all children of each element in the selection
.find() //get all descendants of each element in the selection
.siblings() //get all siblings of each element in the selection
.next() //get the next sibling of each element in the selection
.prev() //get the previous sibling of each element in the selection
and much more...

9. ajax

.load() //load data from the server and place the returned HTML into the matched element
.get() //load data from the server using a HTTP GET request -> can also pass in data as second argument -> also add a callback function
.post() //load data from the server using a HTTP POST request -> can also pass in data as second argument -> also add a callback function
.ajax() //load data from the server using a HTTP request of your choice
